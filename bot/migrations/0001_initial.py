# Generated by Django 5.1.6 on 2025-06-26 11:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GameClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название класса')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Игровой класс',
                'verbose_name_plural': 'Игровые классы',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('telegram_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('tg_name', models.CharField(max_length=50, unique=True, verbose_name='Имя игрока в телеграмм')),
                ('game_nickname', models.CharField(max_length=50, unique=True, verbose_name='Имя игрока в игре')),
                ('is_our_player', models.BooleanField(default=False, verbose_name='Является ли нашим игроком')),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('telegram_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('user_tg_name', models.CharField(blank=True, default='none', max_length=35, null=True, verbose_name='Имя аккаунта в телеграмм')),
                ('user_name', models.CharField(max_length=35, verbose_name='Имя')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_our_player', models.BooleanField(default=False, verbose_name='Является ли нашим игроком')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Телеграм игрок',
                'verbose_name_plural': 'Телеграм игроки',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название активности')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание активности')),
                ('base_coefficient', models.FloatField(default=1.0, verbose_name='Базовый коэффициент')),
                ('level_bonus_base', models.FloatField(default=1.0, help_text='Базовый множитель для расчёта бонуса за уровень', verbose_name='Базовый бонус за уровень')),
                ('level_coefficient', models.FloatField(default=0.1, help_text='Дополнительный коэффициент за каждый уровень персонажа', verbose_name='Коэффициент за уровень')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to='bot.player', verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Активность',
                'verbose_name_plural': 'Активности',
            },
        ),
        migrations.CreateModel(
            name='PlayerClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1, verbose_name='Уровень')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='bot.gameclass', verbose_name='Игровой класс')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_classes', to='bot.player', verbose_name='Игрок')),
            ],
            options={
                'verbose_name': 'Класс игрока',
                'verbose_name_plural': 'Классы игроков',
                'unique_together': {('player', 'game_class')},
            },
        ),
        migrations.AddField(
            model_name='player',
            name='selected_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected_by_players', to='bot.playerclass', verbose_name='Выбранный класс'),
        ),
        migrations.CreateModel(
            name='ActivityClassCoefficient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coefficient', models.FloatField(default=1.0, verbose_name='Коэффициент')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_coefficients', to='bot.activity', verbose_name='Активность')),
                ('game_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_coefficients', to='bot.gameclass', verbose_name='Игровой класс')),
            ],
            options={
                'verbose_name': 'Коэффициент класса активности',
                'verbose_name_plural': 'Коэффициенты классов активности',
                'unique_together': {('activity', 'game_class')},
            },
        ),
        migrations.CreateModel(
            name='ActivityParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0, verbose_name='Заработанные баллы')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='bot.activity', verbose_name='Активность')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='bot.player', verbose_name='Игрок')),
                ('player_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_participations', to='bot.playerclass', verbose_name='Класс игрока')),
            ],
            options={
                'verbose_name': 'Участник активности',
                'verbose_name_plural': 'Участники активности',
                'unique_together': {('activity', 'player')},
            },
        ),
    ]
